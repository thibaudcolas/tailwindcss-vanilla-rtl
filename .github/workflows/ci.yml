name: CI
permissions:
  contents: read
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
      - "renovate/**"
  pull_request:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "commits_count_incr=$(($COUNT+1))" >> $GITHUB_ENV
        if: ${{ github.event_name == 'pull_request' }}
        env:
          COUNT: ${{ github.event.pull_request.commits }}
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: ${{ env.commits_count_incr }}
      - uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/.nvmrc') }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
      # Test Git hooks in CI, to make sure script upgrades do not break them.
      - run: npm run prepare
      # Test commit message validation in CI.
      - run: git log -1 --pretty=%B >> latest.log && ./.git/hooks/commit-msg latest.log
      - run: npm run lint:format
      - run: npm run lint:js
      - run: npm run test
      - run: npm run build
      - run: npx commitlint --from HEAD~${{ github.event.pull_request.commits }} --to HEAD
        if: ${{ github.event_name == 'pull_request' }}
      # - run: npx danger ci --verbose
      #   if: ${{ github.event_name == 'pull_request' }}
      #   env:
      #     DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: npm run report:package
      - uses: actions/configure-pages@v3
      - uses: actions/upload-pages-artifact@v2
        with:
          path: demo
      # - run: npx semantic-release
      #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
      #     GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v3
      - uses: actions/configure-pages@v3
      - uses: actions/deploy-pages@v2
